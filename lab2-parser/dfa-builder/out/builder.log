{
  '<Goal>': [ '[EOF]' ],
  '<GoalR1>': [ '[EOF]' ],
  '<ClassDeclarationR2>': [ '[EOF]', '}' ],
  '<ClassDeclarationR1>': [ '[EOF]', 'public', '}' ],
  '<MethodDeclarationR2>': [ '[EOF]', 'return' ],
  '<MethodDeclarationR1>': [
    '[EOF]',
    '{',
    'if',
    'while',
    'System.out.println',
    'Identifier',
    'return'
  ],
  '<ExpressionO1>': [ '[EOF]', ')' ],
  '<ExpressionO1R1>': [ '[EOF]', ')' ],
  '<StatementR1>': [ '[EOF]', '}' ]
}
{
  'class,Identifier,<ClassDeclarationO1>,{,<ClassDeclarationR1>,<ClassDeclarationR2>,}': [ 'class' ],
  '<ClassDeclaration>,<GoalR1>': [ 'class' ],
  '<GoalR1>': [ 'class', '[EOF]' ],
  '': [ '}' ],
  '{,<ClassDeclarationR1>,<ClassDeclarationR2>,}': [ '{' ],
  'public,<Type>,Identifier,(,<MethodDeclarationO1>,),{,<MethodDeclarationR1>,<MethodDeclarationR2>,return,<Expression>,;,}': [ 'public' ],
  '<MethodDeclaration>,<ClassDeclarationR2>': [ 'public' ],
  '}': [ '}' ],
  '<ClassDeclarationR2>,}': [ 'public', '[EOF]', '}' ],
  'int,[,]': [ 'int' ],
  boolean: [ 'boolean' ],
  int: [ 'int' ],
  Identifier: [ 'Identifier' ],
  '<Type>,Identifier,;': [ 'int', 'boolean', 'Identifier' ],
  '<VarDeclaration>,<ClassDeclarationR1>': [ 'int', 'boolean', 'Identifier' ],
  '<ClassDeclarationR1>': [ 'int', 'boolean', 'Identifier', '[EOF]', 'public', '}' ],
  'Identifier,;': [ 'Identifier' ],
  '<ClassDeclarationR2>': [ 'public', '[EOF]', '}' ],
  'Identifier,(,<MethodDeclarationO1>,),{,<MethodDeclarationR1>,<MethodDeclarationR2>,return,<Expression>,;,}': [ 'Identifier' ],
  '),{,<MethodDeclarationR1>,<MethodDeclarationR2>,return,<Expression>,;,}': [ ')' ],
  'Identifier,<MethodDeclarationO1R1>': [ 'Identifier' ],
  '{,<StatementR1>,}': [ '{' ],
  'if,(,<Expression>,),<Statement>,else,<Statement>': [ 'if' ],
  'while,(,<Expression>,),<Statement>': [ 'while' ],
  'System.out.println,(,<Expression>,),;': [ 'System.out.println' ],
  'Identifier,=,<Expression>,;': [ 'Identifier' ],
  'Identifier,[,<Expression>,],=,<Expression>,;': [ 'Identifier' ],
  '<Statement>,<MethodDeclarationR2>': [ '{', 'if', 'while', 'System.out.println', 'Identifier' ],
  'return,<Expression>,;,}': [ 'return' ],
  '<MethodDeclarationR2>,return,<Expression>,;,}': [
    '{',
    'if',
    'while',
    'System.out.println',
    'Identifier',
    '[EOF]',
    'return'
  ],
  '<VarDeclaration>,<MethodDeclarationR1>': [ 'int', 'boolean', 'Identifier' ],
  '<MethodDeclarationR1>': [
    'int',
    'boolean',
    'Identifier',
    '[EOF]',
    '{',
    'if',
    'while',
    'System.out.println',
    'return'
  ],
  '<MethodDeclarationR2>': [
    '{',
    'if',
    'while',
    'System.out.println',
    'Identifier',
    '[EOF]',
    'return'
  ],
  ';,}': [ ';' ],
  '&&,<Expression>': [ '&&' ],
  '<,<Expression>': [ '<' ],
  '+,<Expression>': [ '+' ],
  '-,<Expression>': [ '-' ],
  '*,<Expression>': [ '*' ],
  '[,<Expression>,]': [ '[' ],
  '.,length': [ '.' ],
  '.,Identifier,(,<ExpressionO1>,)': [ '.' ],
  ']': [ ']' ],
  ')': [ ')' ],
  ',,<Expression>,<ExpressionO1R1>': [ ',' ],
  '<ExpressionO1R1>': [ ',', '[EOF]', ')' ],
  '<Statement>,<StatementR1>': [ '{', 'if', 'while', 'System.out.println', 'Identifier' ],
  '<StatementR1>': [
    '{',
    'if',
    'while',
    'System.out.println',
    'Identifier',
    '[EOF]',
    '}'
  ],
  '),<Statement>,else,<Statement>': [ ')' ],
  'else,<Statement>': [ 'else' ],
  '),<Statement>': [ ')' ],
  '),;': [ ')' ],
  ';': [ ';' ],
  '],=,<Expression>,;': [ ']' ],
  '},}': [ '}' ]
}
